<?php namespace ProcessWire;
class RecurringDatesFinder extends WireData implements Module {
    public static function getModuleInfo()
    {
        return array(
          'title'   => 'Recurring Dates Finder',
          'version' => 001,
          'summary' => '',
          'icon'    => 'search'
        );
    }

    public function find($start, $end, $selector = null, $options = array()) {
        $selected_pages = null;
        $recurring_fields = $this->fields->find('type=FieldtypeRecurringDates');

        if($options['fields']){
            $selected_fields = implode('|', $this->sanitizer->array($options['fields']));
            $recurring_fields = $this->fields->find("name=$selected_fields");
        }

        if($selector){
            //$selector .= "";
            $selector .= ",$recurring_fields>=$start, $recurring_fields<=$end";
            $selected_pages = $this->pages->findIDs($selector);
            if(!$selected_pages){
                return array();
            }
        }

        $default = [
          'fields' => '',
        ];

        $options = array_merge($default, $options);

        $start = $this->sanitizer->date($start);
        $end = $this->sanitizer->date($end);

        if($start)
            $start = $this->datetime('Y-m-d H:i:s', $start);
        if($end)
            $end = $this->datetime('Y-m-d H:i:s', $end);

        /** @var DatabaseQuerySelect $subquery */
        $field_queries = new WireArray();
        foreach($recurring_fields as $field){
            /** @var Field $field */
            $table = $field->getTable();
            $query = "SELECT '{$field->name}' as field, data as date, pages_id as id FROM $table ";
            $where = [];
            if($start){
                $where[] = "data >= :start";
            }
            if($end){
                $where[] = "data <= :end";
            }
            $where = implode(" AND ", $where);
            $query .= "WHERE $where";
            if($selected_pages){
                $selected_pages = implode(",", $selected_pages);
                $query .= " AND pages_id IN($selected_pages)";
            }
            $field_queries->add($query);
        }
        if($field_queries->count() > 1){
            $union_query = $field_queries->implode("UNION All", function($item){
                return $item->getQuery();
            });
            $pdo = $this->database->prepare($union_query);
            $pdo->bindValue(':start', $start);
            $pdo->bindValue(':end', $end);
            $pdo->execute();
            return $pdo->fetchAll(\PDO::FETCH_ASSOC);
        }else{
            //bd($field_queries->first());
            $pdo = $this->database->prepare($field_queries->first());
            $pdo->bindValue(':start', $start);
            $pdo->bindValue(':end', $end);
            $pdo->execute();
            return $pdo->fetchAll(\PDO::FETCH_ASSOC);
        }
    }
}
